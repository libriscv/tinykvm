gonzo@gonzo-ryzen:~/github/tinykvm/build$ ../guest/STREAM/stream 
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 20000000 (elements), Offset = 0 (elements)
Memory per array = 152.6 MiB (= 0.1 GiB).
Total memory required = 457.8 MiB (= 0.4 GiB).
Each kernel will be executed 30 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 5803 microseconds.
   (= 5803 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           35010.9     0.009220     0.009140     0.009649
Scale:          36472.2     0.009123     0.008774     0.009765
Add:            36279.0     0.013568     0.013231     0.013931
Triad:          36179.9     0.013568     0.013267     0.015137
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------

gonzo@gonzo-ryzen:~/github/tinykvm/build$ make -j && HUGE=1 ./simplekvm ../guest/STREAM/stream
[ 67%] Built target tinykvm
[ 89%] Built target simplekvm
[ 89%] Built target bench
[100%] Built target tinytest
Unhandled system call: 262
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 20000000 (elements), Offset = 0 (elements)
Memory per array = 152.6 MiB (= 0.1 GiB).
Total memory required = 457.8 MiB (= 0.4 GiB).
Each kernel will be executed 30 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 2 microseconds.
Each test below will take on the order of 6273 microseconds.
   (= 3136 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           37973.6     0.008583     0.008427     0.008987
Scale:          38702.9     0.008782     0.008268     0.009489
Add:            41103.0     0.012232     0.011678     0.013323
Triad:          41779.4     0.011997     0.011489     0.012838
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Calling fork at 0x402C30
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 20000000 (elements), Offset = 0 (elements)
Memory per array = 152.6 MiB (= 0.1 GiB).
Total memory required = 457.8 MiB (= 0.4 GiB).
Each kernel will be executed 30 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 2 microseconds.
Each test below will take on the order of 6137 microseconds.
   (= 3068 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           38195.1     0.008427     0.008378     0.008510
Scale:          38587.2     0.008521     0.008293     0.009181
Add:            41645.4     0.011824     0.011526     0.012571
Triad:          41782.9     0.011702     0.011488     0.012445
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Calling fork at 0x402C30
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 20000000 (elements), Offset = 0 (elements)
Memory per array = 152.6 MiB (= 0.1 GiB).
Total memory required = 457.8 MiB (= 0.4 GiB).
Each kernel will be executed 30 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 2 microseconds.
Each test below will take on the order of 6559 microseconds.
   (= 3279 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           38222.3     0.008412     0.008372     0.008472
Scale:          38830.5     0.008350     0.008241     0.008603
Add:            41382.6     0.011866     0.011599     0.012276
Triad:          42183.0     0.011563     0.011379     0.011918
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------

$ HUGE=1 ./simplekvm ../guest/STREAM/static_hugepage_stream 
Unhandled system call: 262
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
a: 0x5cf000, b: 0x42d8000, c: 0x7fe1000
-------------------------------------------------------------
Array size = 8000000 (elements), Offset = 0 (elements)
Memory per array = 61.0 MiB (= 0.1 GiB).
Total memory required = 183.1 MiB (= 0.2 GiB).
Each kernel will be executed 16 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 2 microseconds.
Each test below will take on the order of 2413 microseconds.
   (= 1206 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           42707.1     0.003182     0.002997     0.003230
Scale:          41316.8     0.003195     0.003098     0.003584
Add:            42032.8     0.004749     0.004568     0.004956
Triad:          41704.1     0.004731     0.004604     0.005291
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Calling fork at 0x402B20
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
a: 0xbcea000, b: 0xf9f3000, c: 0x136fc000
-------------------------------------------------------------
Array size = 8000000 (elements), Offset = 0 (elements)
Memory per array = 61.0 MiB (= 0.1 GiB).
Total memory required = 183.1 MiB (= 0.2 GiB).
Each kernel will be executed 16 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 2 microseconds.
Each test below will take on the order of 2401 microseconds.
   (= 1200 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           41425.2     0.003175     0.003090     0.003269
Scale:          40635.1     0.003278     0.003150     0.003722
Add:            41131.1     0.004870     0.004668     0.005349
Triad:          42059.1     0.004740     0.004565     0.005299
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Calling fork at 0x402B20
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
a: 0x17405000, b: 0x1b10e000, c: 0x1ee17000
-------------------------------------------------------------
Array size = 8000000 (elements), Offset = 0 (elements)
Memory per array = 61.0 MiB (= 0.1 GiB).
Total memory required = 183.1 MiB (= 0.2 GiB).
Each kernel will be executed 16 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 2 microseconds.
Each test below will take on the order of 2326 microseconds.
   (= 1163 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           43056.5     0.003058     0.002973     0.003307
Scale:          41412.4     0.003172     0.003091     0.003331
Add:            41263.9     0.004778     0.004653     0.005085
Triad:          41995.5     0.004698     0.004572     0.004854
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------

gonzo@gonzo-ryzen:~/github/tinykvm/build$ ~/github/coremark/static_coremark.bolt 
2K performance run parameters for coremark.
CoreMark Size    : 666
Total ticks      : 13829
Total time (secs): 13.829000
Iterations/Sec   : 43387.085111
Iterations       : 600000
Compiler version : Ubuntu Clang 14.0.0
Compiler flags   : -O2 -DPERFORMANCE_RUN=1  -lrt
Memory location  : Please put data memory location here
			(e.g. code in flash, data on heap etc)
seedcrc          : 0xe9f5
[0]crclist       : 0xe714
[0]crcmatrix     : 0x1fd7
[0]crcstate      : 0x8e3a
[0]crcfinal      : 0xa14c
Correct operation validated. See README.md for run and reporting rules.
CoreMark 1.0 : 43387.085111 / Ubuntu Clang 14.0.0 -O2 -DPERFORMANCE_RUN=1  -lrt / Heap

gonzo@gonzo-ryzen:~/github/tinykvm/build$ ./simplekvm ~/github/coremark/static_coremark.bolt 
Unhandled system call: 262
2K performance run parameters for coremark.
CoreMark Size    : 666
Total ticks      : 13767
Total time (secs): 13.767000
Iterations/Sec   : 43582.479843
Iterations       : 600000
Compiler version : Ubuntu Clang 14.0.0
Compiler flags   : -O2 -DPERFORMANCE_RUN=1  -lrt
Memory location  : Please put data memory location here
			(e.g. code in flash, data on heap etc)
seedcrc          : 0xe9f5
[0]crclist       : 0xe714
[0]crcmatrix     : 0x1fd7
[0]crcstate      : 0x8e3a
[0]crcfinal      : 0xa14c
Correct operation validated. See README.md for run and reporting rules.
CoreMark 1.0 : 43582.479843 / Ubuntu Clang 14.0.0 -O2 -DPERFORMANCE_RUN=1  -lrt / Heap
Time: 16.303836s Return value: 0

gonzo@gonzo-ryzen:~/github/tinykvm/build$ HUGE=1 ./simplekvm ~/github/coremark/static_coremark.bolt 
Unhandled system call: 262
2K performance run parameters for coremark.
CoreMark Size    : 666
Total ticks      : 13585
Total time (secs): 13.585000
Iterations/Sec   : 44166.359956
Iterations       : 600000
Compiler version : Ubuntu Clang 14.0.0
Compiler flags   : -O2 -DPERFORMANCE_RUN=1  -lrt
Memory location  : Please put data memory location here
			(e.g. code in flash, data on heap etc)
seedcrc          : 0xe9f5
[0]crclist       : 0xe714
[0]crcmatrix     : 0x1fd7
[0]crcstate      : 0x8e3a
[0]crcfinal      : 0xa14c
Correct operation validated. See README.md for run and reporting rules.
CoreMark 1.0 : 44166.359956 / Ubuntu Clang 14.0.0 -O2 -DPERFORMANCE_RUN=1  -lrt / Heap
Time: 16.086477s Return value: 0

